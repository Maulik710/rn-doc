import React,{useState} from 'react'
import { StyleSheet, Text, TouchableOpacity,Easing, View,Animated,Image } from 'react-native'

const App = () => {
  const [Animation, setAnimation] = useState(false)
  const [Item1, setItem1] = useState()
  let Item1width = new Animated.Value(20);
  let Item1height = new Animated.Value(20);
  let Item2width = new Animated.Value(20);
  let Item2height = new Animated.Value(20);
  let Item3width = new Animated.Value(20);
  let Item3height = new Animated.Value(20);
 

 


 const buttonPress=(data)=>{
   console.log('Data get',data);
   
   if(data=='item1'){

  Animated.timing(
    Item1width, // The animated value to drive
    {
      toValue: 30, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item1height, // The animated value to drive
    {
      toValue: 30, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); 
  Animated.timing(
    Item2width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item2width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start();  
  Animated.timing(
    Item3width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item3height, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); 
}
else if(data=='item2'){

  Animated.timing(
    Item2width, // The animated value to drive
    {
      toValue: 30, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item2height, // The animated value to drive
    {
      toValue: 30, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); 
  Animated.timing(
    Item1width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item1width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start();  
  Animated.timing(
    Item3width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item3height, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); 
}
else if(data=='item3'){
  Animated.timing(
    Item3width, // The animated value to drive
    {
      toValue: 30, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item3height, // The animated value to drive
    {
      toValue: 30, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); 
 Animated.timing(
    Item2width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item2width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start();  
  Animated.timing(
    Item1width, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); // Starts the animation
  Animated.timing(
    Item1height, // The animated value to drive
    {
      toValue: 20, // Animate to opacity: 1 (opaque)
      duration: 700, // Make it take a while
      useNativeDriver: false,
    },
  ).start(); 
}
  
    }

  

  return (
    <View style={{flex:1,justifyContent:'flex-end',alignItems:'center'}}>
      <View style={{
        height:'10%',
        width:'100%',
        backgroundColor:'#000',
        alignItems:'center',
        justifyContent:'space-between',
        flexDirection:'row'
        }}>
        
          <TouchableOpacity style={{marginLeft:20,width:40}} onPress={()=>buttonPress('item1')}>
           <Animated.Image style={{   width: Item1width,
          height: Item1height,resizeMode:'contain'}} source={require('./item.png')}/>
          </TouchableOpacity>
          <TouchableOpacity style={{width:40}} onPress={()=>buttonPress('item2')}>
           <Animated.Image style={{   width: Item2width,
          height: Item2height,resizeMode:'contain'}} source={require('./item.png')}/>
          </TouchableOpacity>
          <TouchableOpacity style={{marginRight:20,width:40}}  onPress={()=>buttonPress('item3')}>
           <Animated.Image style={{   width: Item3width,
          height: Item3height,resizeMode:'contain'}} source={require('./item.png')}/>
          </TouchableOpacity>
          
     
      </View>
    </View>
  )
}

export default App

const styles = StyleSheet.create({})
